


ARM Macro Assembler    Page 1 


    1 00000000         ; File: LCD.s
    2 00000000         ; Name: Brian Cheung and Sam Wang
    3 00000000         ; Date: 5/4/18
    4 00000000         ; Desc: This driver assumes two low-level LCD functions
    5 00000000         ; Usage: Use SSI0 to send an 8-bit code to the ST7735 16
                       0x128 pixel LCD.
    6 00000000         
    7 00000000         ; Backlight (pin 10) connected to +3.3 V
    8 00000000         ; MISO (pin 9) unconnected
    9 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   10 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   11 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   12 00000000         ; CARD_CS (pin 5) unconnected
   13 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   14 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   15 00000000         ; VCC (pin 2) connected to +3.3 V
   16 00000000         ; Gnd (pin 1) connected to ground
   17 00000000         
   18 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   19 00000000 40004100 
                       DC      EQU              0x40004100
   20 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   21 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   22 00000000 00000004 
                       SSI_SR_RNE
                               EQU              0x00000004  ; SSI Receive FIFO 
                                                            Not Empty
   23 00000000 00000010 
                       SSI_SR_BSY
                               EQU              0x00000010  ; SSI Busy Bit
   24 00000000 00000002 
                       SSI_SR_TNF
                               EQU              0x00000002  ; SSI Transmit FIFO
                                                             Not Full
   25 00000000         
   26 00000000                 EXPORT           writecommand
   27 00000000                 EXPORT           writedata
   28 00000000         
   29 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   30 00000000                 THUMB
   31 00000000                 ALIGN
   32 00000000         
   33 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   34 00000000         ; sent.  The SSI module has hardware input and output FI
                       FOs
   35 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat
   36 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   37 00000000         ; lot of data, the FIFOs are not used when writing
   38 00000000         ; commands, and they are used when writing data.  This



ARM Macro Assembler    Page 2 


   39 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   40 00000000         ; that is actually being transmitted.
   41 00000000         ; The write command operation waits until all data has b
                       een
   42 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   43 00000000         ; the command, and then waits for the transmission to
   44 00000000         ; finish.
   45 00000000         ; The write data operation waits until there is room in 
                       the
   46 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   47 00000000         ; and then adds the data to the transmit FIFO.
   48 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   49 00000000         ; the SSI0 module is not initialized and enabled.
   50 00000000         
   51 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   52 00000000         ; Input: R0  8-bit command to transmit
   53 00000000         ; Output: none
   54 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   55 00000000         writecommand
   56 00000000         ;1) Read SSI0_SR_R and check bit 4, 
   57 00000000         ;2) If bit 4 is high, loop back to step 1 (wait for BUSY
                        bit to be low)
   58 00000000         ;3) Clear D/C=PA6 to zero
   59 00000000         ;4) Write the command to SSI0_DR_R
   60 00000000         ;5) Read SSI0_SR_R and check bit 4, 
   61 00000000         ;6) If bit 4 is high, loop back to step 5 (wait for BUSY
                        bit to be low)
   62 00000000         
   63 00000000 4910            LDR              R1, =SSI0_SR_R ;read SSI0_SR_R 
                                                            bit 4
   64 00000002         loop
   65 00000002 680A            LDR              R2, [R1]
   66 00000004 F002 0210       AND              R2, #SSI_SR_BSY
   67 00000008 2A10            CMP              R2, #SSI_SR_BSY
   68 0000000A D0FA            BEQ              loop        ;loop if SSI0_SR_R 
                                                            bit 4 is high
   69 0000000C         
   70 0000000C 4A0E            LDR              R2, =DC     ;clear D/C PA6
   71 0000000E 6813            LDR              R3, [R2]
   72 00000010 F023 0340       BIC              R3, #0x40
   73 00000014 6013            STR              R3, [R2]
   74 00000016         
   75 00000016 4A0D            LDR              R2, =SSI0_DR_R ;write command t
                                                            o SSI0_DR_R
   76 00000018 6010            STR              R0, [R2]
   77 0000001A         
   78 0000001A         loop2
   79 0000001A 680A            LDR              R2, [R1]    ;read SSI0_SR_R bit
                                                             4
   80 0000001C F002 0210       AND              R2, #SSI_SR_BSY
   81 00000020 2A10            CMP              R2, #SSI_SR_BSY
   82 00000022 D0FA            BEQ              loop2       ;loop if SSI0_SR_R 
                                                            bit 4 is high



ARM Macro Assembler    Page 3 


   83 00000024         
   84 00000024 4770            BX               LR          ;   return
   85 00000026         
   86 00000026         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
   87 00000026         ; Input: R0  8-bit data to transmit
   88 00000026         ; Output: none
   89 00000026         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   90 00000026         writedata
   91 00000026         ;1) Read SSI0_SR_R and check bit 1, 
   92 00000026         ;2) If bit 1 is low loop back to step 1 (wait for TNF bi
                       t to be high)
   93 00000026         ;3) Set D/C=PA6 to one
   94 00000026         ;4) Write the 8-bit data to SSI0_DR_R
   95 00000026         
   96 00000026 4907            LDR              R1, =SSI0_SR_R ;Read SSI0_SR_R 
                                                            and check bit 1
   97 00000028         loop3
   98 00000028 680A            LDR              R2, [R1]
   99 0000002A F002 0202       AND              R2, #SSI_SR_TNF
  100 0000002E 2A00            CMP              R2, #0x00
  101 00000030 D0FA            BEQ              loop3       ;If bit 1 is low lo
                                                            op back to step 1
  102 00000032         
  103 00000032 4905            LDR              R1, =DC     ;Set D/C=PA6 to one
                                                            
  104 00000034 680A            LDR              R2, [R1]
  105 00000036 F042 0240       ORR              R2, #0x40
  106 0000003A 600A            STR              R2, [R1]
  107 0000003C         
  108 0000003C 4903            LDR              R1, =SSI0_DR_R ;Write the 8-bit
                                                             data to SSI0_DR_R
  109 0000003E 6008            STR              R0, [R1]
  110 00000040         
  111 00000040 4770            BX               LR          ;   return
  112 00000042         
  113 00000042 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  114 00000044                 END                          ; end of file
              4000800C 
              40004100 
              40008008 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\lcd.d 
-o.\lcd.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\
Luminary --list=.\lcd.lst ..\src\LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 29 in file ..\src\LCD.s
   Uses
      None
Comment: .text unused
loop 00000002

Symbol: loop
   Definitions
      At line 64 in file ..\src\LCD.s
   Uses
      At line 68 in file ..\src\LCD.s
Comment: loop used once
loop2 0000001A

Symbol: loop2
   Definitions
      At line 78 in file ..\src\LCD.s
   Uses
      At line 82 in file ..\src\LCD.s
Comment: loop2 used once
loop3 00000028

Symbol: loop3
   Definitions
      At line 97 in file ..\src\LCD.s
   Uses
      At line 101 in file ..\src\LCD.s
Comment: loop3 used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 55 in file ..\src\LCD.s
   Uses
      At line 26 in file ..\src\LCD.s
Comment: writecommand used once
writedata 00000026

Symbol: writedata
   Definitions
      At line 90 in file ..\src\LCD.s
   Uses
      At line 27 in file ..\src\LCD.s
Comment: writedata used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DC 40004100

Symbol: DC
   Definitions
      At line 19 in file ..\src\LCD.s
   Uses
      At line 70 in file ..\src\LCD.s
      At line 103 in file ..\src\LCD.s

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 18 in file ..\src\LCD.s
   Uses
      None
Comment: GPIO_PORTA_DATA_R unused
SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 20 in file ..\src\LCD.s
   Uses
      At line 75 in file ..\src\LCD.s
      At line 108 in file ..\src\LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 21 in file ..\src\LCD.s
   Uses
      At line 63 in file ..\src\LCD.s
      At line 96 in file ..\src\LCD.s

SSI_SR_BSY 00000010

Symbol: SSI_SR_BSY
   Definitions
      At line 23 in file ..\src\LCD.s
   Uses
      At line 66 in file ..\src\LCD.s
      At line 67 in file ..\src\LCD.s
      At line 80 in file ..\src\LCD.s
      At line 81 in file ..\src\LCD.s

SSI_SR_RNE 00000004

Symbol: SSI_SR_RNE
   Definitions
      At line 22 in file ..\src\LCD.s
   Uses
      None
Comment: SSI_SR_RNE unused
SSI_SR_TNF 00000002

Symbol: SSI_SR_TNF
   Definitions
      At line 24 in file ..\src\LCD.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 99 in file ..\src\LCD.s
Comment: SSI_SR_TNF used once
7 symbols
345 symbols in table
